import React from "react";
import {
  BarChart,
  Bar,
  XAxis,
  YAxis,
  CartesianGrid,
  Tooltip,
  ResponsiveContainer,
  Label
} from "recharts";

const AveragePriceByRatingChart = ({ products }) => {
  const ratingGroups = {};

  products.forEach((product) => {
    if (product.rating != null && product.price != null) {
      const rating = Math.floor(product.rating);
      if (!ratingGroups[rating]) {
        ratingGroups[rating] = { total: 0, count: 0 };
      }
      ratingGroups[rating].total += product.price;
      ratingGroups[rating].count += 1;
    }
  });

  const data = Object.entries(ratingGroups)
    .map(([rating, group]) => ({
      rating: Number(rating),
      avgPrice: group.total / group.count,
    }))
    .sort((a, b) => a.rating - b.rating);

  return (
    <div className="max-w-5xl mx-auto bg-white rounded-3xl shadow-xl p-6 ring-1 ring-gray-200">
      <h2 className="text-2xl font-bold text-indigo-700 mb-2 text-center">üìà –°—Ä–µ–¥–Ω—è—è —Ü–µ–Ω–∞ –ø–æ —Ä–µ–π—Ç–∏–Ω–≥—É</h2>
      <p className="text-gray-600 text-center mb-6">
        –≠—Ç–æ—Ç –≥—Ä–∞—Ñ–∏–∫ –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç, –∫–∞–∫ —Å—Ä–µ–¥–Ω—è—è —Ü–µ–Ω–∞ —Ç–æ–≤–∞—Ä–æ–≤ –º–µ–Ω—è–µ—Ç—Å—è –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –∏—Ö —Ä–µ–π—Ç–∏–Ω–≥–∞.
      </p>

      <ResponsiveContainer width="100%" height={350}>
        <BarChart data={data} margin={{ top: 10, right: 20, left: 10, bottom: 40 }}>
          <CartesianGrid strokeDasharray="4 4" stroke="#e5e7eb" />
          <XAxis dataKey="rating" tick={{ fontSize: 14 }} stroke="#6b7280">
            <Label value="–†–µ–π—Ç–∏–Ω–≥ —Ç–æ–≤–∞—Ä–∞" offset={20} position="bottom" />
          </XAxis>
          <YAxis stroke="#6b7280" tickFormatter={(value) => `${value.toFixed(0)} ‚ÇΩ`}>
            <Label
              value="–°—Ä–µ–¥–Ω—è—è —Ü–µ–Ω–∞"
              angle={-90}
              position="insideLeft"
              style={{ textAnchor: 'middle', fill: '#6b7280' }}
            />
          </YAxis>
          <Tooltip
            formatter={(value) => [`${value.toFixed(2)} ‚ÇΩ`, "–°—Ä–µ–¥–Ω—è—è —Ü–µ–Ω–∞"]}
            labelFormatter={(label) => `–†–µ–π—Ç–∏–Ω–≥: ${label}`}
            contentStyle={{ borderRadius: 12, backgroundColor: "#f9fafb", borderColor: "#d1d5db" }}
          />
          <Bar dataKey="avgPrice" fill="#6366f1" radius={[6, 6, 0, 0]} />
        </BarChart>
      </ResponsiveContainer>
    </div>
  );
};

export default AveragePriceByRatingChart;
